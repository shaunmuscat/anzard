- content_for :tabs do
  = render "tabs"

- title 'Current Users'
= form_tag admin_users_path, method: :get do
  = label_tag :clinic_filter, 'Filter by clinic'
  &nbsp;
  = select_tag :clinic_filter, clinic_filter_options(@clinic_filter), {class: 'large'}
  = hidden_field_tag :sort, sort_column
  = hidden_field_tag :direction, sort_direction
  = submit_tag "Filter"
%table#users
  %thead
    %tr.sortable
      %th= sortable 'first_name'
      %th= sortable 'last_name'
      %th= sortable 'email'
      %th= sortable 'roles.name', 'Role'
      %th= sortable 'clinics.name', 'Clinic'
      %th= sortable 'status'
      %th= sortable 'last_sign_in_at', 'Last signed in'
      %th Actions
  %tbody
    - @users.each do |user|
      %tr{class: cycle('field_bg', 'field_nobg')}
        %td= user.first_name
        %td= user.last_name
        %td= user.email
        %td= user.role.name if user.role
        -# ToDo: deal with displaying all user clinic associations (rather than the current first clinic hotfix)
        %td= !user.clinics.first.nil? ? "#{user.clinics.first.unit_name} ("+ ((user.clinics.first.site_name + " - ") if user.clinics.first.site_name.present?) +"#{user.clinics.first.state})" : "(None)"
        %td
          - if user.status == 'A'
            Active
          - else
            Deactivated
        %td
          - if user.last_sign_in_at.nil?
            Never logged in
          - else
            = user.last_sign_in_at.localtime.strftime("%d/%m/%Y %I:%M%p")
        %td
          %p
            = link_to "View Details", admin_user_path(user), id: "view_#{user.id}", class: 'btn'
          - if can?(:update_role, User)
            = link_to 'Edit Access Level', edit_role_admin_user_path(user), id: "edit_role_#{user.id}", class: 'btn'
